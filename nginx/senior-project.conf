##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/acme;
    }

    location /  {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # SSL configuration
    #
    # listen 443 ssl default_server;
    # listen [::]:443 ssl default_server;
    #
    # Note: You should disable gzip for SSL traffic.
    # See: https://bugs.debian.org/773332
    #
    # Read up on ssl_ciphers to ensure a secure configuration.
    # See: https://bugs.debian.org/765782

    # These certificates are obtained from LetsEncrpyt via certbot.  Certbot is set
    # to periodically renew the certificate using systemd timers.
    ssl_certificate /etc/letsencrypt/live/seniorproject.se.rit.edu/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/seniorproject.se.rit.edu/privkey.pem;
    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/seniorproject.se.rit.edu/chain.pem;

    # This is located at /etc/nginx/tls_params.
    include tls_params;

    root /home/website/RIT-SE-Senior-Project/ui/build;
    index index.html;

    server_name seniorproject.se.rit.edu;

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri /index.html =404;
        # expires 30d;                          # Expire cache after 30 days TODO: add after general dev is done
    }

    location /www {
        root /home/website/RIT-SE-Senior-Project/server/;
        default_type application;
        try_files $uri =404;
    }

    location ~ ^/(db|saml) {

        proxy_pass http://localhost:3001;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Host $host;

        # Enable for web sockets
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection 'upgrade';
        # proxy_cache_bypass $http_upgrade;
    }
}
